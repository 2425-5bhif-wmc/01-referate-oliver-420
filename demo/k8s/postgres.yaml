apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-service
spec:
  ports:
    - port: 5432
  selector:
    app: postgresql

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
spec:
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:15
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: db
            - name: POSTGRES_USER
              value: app
            - name: POSTGRES_PASSWORD
              value: app
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-storage
          lifecycle:
            postStart:
              exec:
                command:
                  - "/bin/sh"
                  - "-c"
                  - "apt-get update && apt-get install -y nano"
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-backup-cronjob
spec:
  schedule: "*/1 * * * *"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
            - name: backup-container
              image: alpine:latest
              command:
                - "/bin/sh"
                - "-c"
                - |
                  apk add --no-cache postgresql-client bash curl && \
                  POD_NAME=$(hostname) && \
                  mkdir -p /var/lib/postgresql/data/db_backup && \
                  cp /backup/backup.sh /var/lib/postgresql/data/db_backup/backup.sh && \
                  chmod +x /var/lib/postgresql/data/db_backup/backup.sh && \
                  /var/lib/postgresql/data/db_backup/backup.sh "$POD_NAME" && \
                  find /var/lib/postgresql/data/db_backup -type f -name '*.sql' -mmin +3 -delete
              env:
                - name: PGPASSWORD
                  value: app
              volumeMounts:
                - name: postgres-storage
                  mountPath: /var/lib/postgresql/data
                - name: backup-script
                  mountPath: /backup
          volumes:
            - name: postgres-storage
              persistentVolumeClaim:
                claimName: postgres-pvc
            - name: backup-script
              configMap:
                name: backup-script-configmap

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backup-script-configmap
data:
  backup.sh: |
    #!/bin/bash
    echo "Backup started..."
    export PGPASSWORD=app
    POD_NAME=$1
    mkdir -p /var/lib/postgresql/data/db_backup
    BACKUP_FILE="/var/lib/postgresql/data/db_backup/${POD_NAME}_$(date +%Y%m%d%H%M%S).sql"
    pg_dump -U app -h postgresql-service db > "$BACKUP_FILE"
    echo "Backup completed! File: $BACKUP_FILE"
